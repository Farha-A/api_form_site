openapi: 3.0.0
info:
  title: form site api
  version: 1.0.0
servers:
  - url: http://localhost:5000
paths:
  /users/:
    get:
      summary: get all users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    user_id:
                      type: string
                    name:
                      type: string
                    age:
                      type: integer
                    email:
                      type: string
    post:
      summary: create new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  example: 202002020
                name:
                  type: string
                  example: Ash Ketchum
                age:
                  type: integer
                  example: 20
                email:
                  type: string
                  example: ash314@gmail.com
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  name:
                    type: string
                  age:
                    type: integer
                  email:
                    type: string

  /users/{id}:
    put:
      summary: change user info
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Ash Ketchum
                age:
                  type: integer
                  example: 20
                email:
                  type: string
                  example: ash314@gmail.com
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  age:
                    type: integer
                  email:
                    type: string
        '404':
          description: User not found

    delete:
      summary: delete user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: User deleted successfully
        '404':
          description: User not found

  /users/{user_id}:
    get:
      summary: retrieve user by user_id
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  name:
                    type: string
                  age:
                    type: integer
                  email:
                    type: string
        '404':
          description: User not found
